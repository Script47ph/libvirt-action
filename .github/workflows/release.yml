name: Release Instance ENV
on:
  workflow_run:
    workflows: ["Preparing Release"]
    types: completed
  workflow_dispatch: 

jobs:
  Apply:
    environment: MyLAB
    runs-on: ubuntu-latest
    steps:
      - name: Checkout local git
        uses: actions/checkout@v4
      - name: Applying Config
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            export POOL="${{ vars.POOL }}"
            export POOLDIR=${{ vars.POOLDIR }}
            export POOL_IMG=${{ vars.POOL_IMG }}
            export NETWORK_RAW='${{ secrets.NETWORK_RAW }}'
            export NETWORK_DIR=${{ secrets.NETWORK_DIR }}
            export OS_IMG=${{ vars.OS_IMG }}
            export OS_IMG_URL=${{ vars.OS_IMG_URL }}
            source ${{ secrets.INSTANCE_DIR }}/scripts/setup/instance.sh
            config_img
            config_net
      - name: Create instance
        run: |
          echo "${{ secrets.INSTANCE_SPECS }}" > ${{ vars.VM_NAME }}.txt
          bash scripts/terraform-gen/tfgen.sh ${{ vars.VM_NAME }} ${{ vars.VM_NAME }}.txt
        env:
          OS: ${{ vars.OS_IMG }}
          NAME: ${{ vars.VM_NAME }}
      - uses: hashicorp/setup-terraform@v3
      - name: Validate terraform template
        id: validate-vm
        run: |
          cd ${{ vars.VM_NAME }}
          terraform init
          terraform validate
      - name: Copy instance template
        uses: appleboy/scp-action@v0.1.7
        if: steps.validate-vm.outcome == 'success'
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: ${{ vars.VM_NAME }}
          target: ${{ secrets.INSTANCE_DIR }}/${{ github.repository }}
      - name: Applying template
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.INSTANCE_DIR }}/${{ github.repository }}/${{ vars.VM_NAME }}
            terraform apply -auto-approve