name: CI Action

on:
  push:
    branches: main
  workflow_dispatch:

jobs:
  Prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout local git
        uses: actions/checkout@v4

      - name: Delete existing directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: if [ -n "${{ secrets.TESTDIR }}" ]; then sudo rm -rf ${{ secrets.TESTDIR }}; fi

      - name: Copy to destination
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: ./*
          target: ${{ secrets.TESTDIR }}


  # Debug:
  #   needs: Prepare
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check current directory
  #       uses: appleboy/ssh-action@v1.0.3
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USER }}
  #         key: ${{ secrets.KEY }}
  #         port: ${{ secrets.PORT }}
  #         script: |
  #           pwd
  #           ls -lh
  #           env
  #           cat ${{ vars.POOL }} > POOL.txt
  #           cat POOL.txt
  #           cat ${{ vars.NETWORK_RAW }} > NETWORK_RAW.txt
  #           cat NETWORK_RAW.txt

  Apply:
    needs: Prepare
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            source ${{ secrets.TESTDIR }}/scripts/action.sh
            install_libvirt
            install_terraform
            install_geniso

      - name: Applying Config
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            export POOL="${{ vars.POOL }}"
            export NETWORK_RAW="${{ vars.NETWORK_RAW }}"
            cd ${{ secrets.TESTDIR }}
            source scripts/action.sh
            config_libvirt
            config_pool
            config_net
            terraform init
            terraform validate