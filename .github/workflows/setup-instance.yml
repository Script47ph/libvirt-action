name: Setup Instance

on:
  # push:
  #   branches:
  #    - main
  workflow_dispatch: 

jobs:
  Prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout local git
        uses: actions/checkout@v4
      - name: Copy to destination
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: "./scripts/setup/instance.sh,./scripts/terraform-gen"
          target: ${{ vars.INSTANCE_DIR }}

  Apply:
    needs: Prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout local git
        uses: actions/checkout@v4
      - name: Applying Config
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            export POOL="${{ vars.POOL }}"
            export POOLDIR=${{ vars.POOLDIR }}
            export POOL_IMG=${{ vars.POOL_IMG }}
            export NETWORK_RAW='${{ vars.NETWORK_RAW }}'
            export NETWORK_DIR=${{ vars.NETWORK_DIR }}
            export OS_IMG=${{ vars.OS_IMG }}
            export OS_IMG_URL=${{ vars.OS_IMG_URL }}
            source ${{ vars.INSTANCE_DIR }}/scripts/setup/instance.sh
            config_img
            config_net
      - name: Create testing instance
        run: |
          echo "${{ secrets.INSTANCE_SPECS }}" > testing-instance.txt
          bash scripts/terraform-gen/tfgen.sh testing testing-instance.txt
        env:
          OS_IMG: ${{ vars.OS_IMG }}
      - uses: hashicorp/setup-terraform@v3
      - name: Validate terraform template
        id: validate-vm
        run: |
          cd testing
          terraform init
          terraform validate
      - name: Copy testing instance template
        uses: appleboy/scp-action@v0.1.7
        if: steps.validate-vm.outcome == 'success'
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: testing
          target: ${{ vars.INSTANCE_DIR }}/${{ github.repository }}
      - name: Applying template
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ vars.INSTANCE_DIR }}/${{ github.repository }}/testing
            terraform apply -auto-approve

  Destroy:
    runs-on: ubuntu-latest
    environment: manual
    steps:
      - name: Destroy Instance
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            export POOL="${{ vars.POOL }}"
            export POOLDIR=${{ vars.POOLDIR }}
            export POOL_IMG=${{ vars.POOL_IMG }}
            export NETWORK_RAW='${{ vars.NETWORK_RAW }}'
            export NETWORK_DIR=${{ vars.NETWORK_DIR }}
            export OS_IMG=${{ vars.OS_IMG }}
            source ${{ vars.INSTANCE_DIR }}/scripts/setup/instance.sh
            destroy_img
            destroy_net